worker_processes 1;

events {
    worker_connections 1024;
}

http {
    client_max_body_size 100M;
    
    upstream ecommerce_server {
        least_conn;  # Ensures requests from the same IP go to the same backend
        server ecommerce-server:9090;  # Docker DNS will resolve this service name to any of the running replicas
    }

    server {
        listen 80;
        server_name localhost;

        location /graphql {
            proxy_pass http://ecommerce_server;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_redirect off;

             # WebSocket headers
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Increase timeouts for WebSocket connections
            proxy_connect_timeout 1d;
            proxy_send_timeout 1d;
            proxy_read_timeout 1d;
            send_timeout 1d;
        } 
    }

    # Optional: Enable detailed logging for debugging
    error_log /var/log/nginx/error.log debug;
}